# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Go

on:
  push:
    branches: [ "master", "v2" ]
  pull_request:
    branches: [ "master", "v2" ]

jobs:

  root:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go-version: [ '1.22.x' ]
    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.22.0'

    - name: Test
      run: go test -cover ./...

  # redis:
  #   runs-on: ubuntu-latest
  #   strategy:
  #     matrix:
  #       go-version: [ '1.22.x' ]

  #   # Service containers to run with `container-job`
  #   services:
  #     # Label used to access the service container
  #     redis:
  #       # Docker Hub image
  #       image: redis
  #       # Set health checks to wait until redis has started
  #       options: >-
  #         --health-cmd "redis-cli ping"
  #         --health-interval 10s
  #         --health-timeout 5s
  #         --health-retries 5
  #       ports:
  #         # Maps port 6379 on service container to the host
  #         - 6379:6379

  #   steps:
  #   - uses: actions/checkout@v4

  #   - name: Set up Go
  #     uses: actions/setup-go@v4
  #     with:
  #       go-version: '1.22.0'

  #   - name: Test
  #     run: |
  #       cd storage/redis
  #       go test -cover ./...

  # sqlite3:
  #   runs-on: ubuntu-latest
  #   strategy:
  #     matrix:
  #       go-version: [ '1.22.x' ]
  #   steps:
  #   - uses: actions/checkout@v4

  #   - name: Set up Go
  #     uses: actions/setup-go@v4

  #   - name: Test
  #     run: |
  #       cd storage/sqlite3
  #       go test -cover ./...